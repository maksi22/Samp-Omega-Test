#pragma once

#define DINPUT_DEVICE_IS_MOUSE m_dwType == DI8DEVTYPE_MOUSE

#include <DirectX/dinput.h>

class CDInput8DeviceProxy : public IDirectInputDevice8A
{
public:
	CDInput8DeviceProxy(IDirectInput8A* pInput, IDirectInputDevice8A* pDevice);
	~CDInput8DeviceProxy();
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID * ppvObj);
    STDMETHOD_(ULONG,AddRef)(THIS);
    STDMETHOD_(ULONG,Release)(THIS);
    STDMETHOD(GetCapabilities)(THIS_ LPDIDEVCAPS);
    STDMETHOD(EnumObjects)(THIS_ LPDIENUMDEVICEOBJECTSCALLBACKA,LPVOID,DWORD);
    STDMETHOD(GetProperty)(THIS_ REFGUID,LPDIPROPHEADER);
    STDMETHOD(SetProperty)(THIS_ REFGUID,LPCDIPROPHEADER);
    STDMETHOD(Acquire)(THIS);
    STDMETHOD(Unacquire)(THIS);
    STDMETHOD(GetDeviceState)(THIS_ DWORD,LPVOID);
    STDMETHOD(GetDeviceData)(THIS_ DWORD,LPDIDEVICEOBJECTDATA,LPDWORD,DWORD);
    STDMETHOD(SetDataFormat)(THIS_ LPCDIDATAFORMAT);
    STDMETHOD(SetEventNotification)(THIS_ HANDLE);
    STDMETHOD(SetCooperativeLevel)(THIS_ HWND,DWORD);
    STDMETHOD(GetObjectInfo)(THIS_ LPDIDEVICEOBJECTINSTANCEA,DWORD,DWORD);
    STDMETHOD(GetDeviceInfo)(THIS_ LPDIDEVICEINSTANCEA);
    STDMETHOD(RunControlPanel)(THIS_ HWND,DWORD);
    STDMETHOD(Initialize)(THIS_ HINSTANCE,DWORD,REFGUID);
    STDMETHOD(CreateEffect)(THIS_ REFGUID,LPCDIEFFECT,LPDIRECTINPUTEFFECT *,LPUNKNOWN);
    STDMETHOD(EnumEffects)(THIS_ LPDIENUMEFFECTSCALLBACKA,LPVOID,DWORD);
    STDMETHOD(GetEffectInfo)(THIS_ LPDIEFFECTINFOA,REFGUID);
    STDMETHOD(GetForceFeedbackState)(THIS_ LPDWORD);
    STDMETHOD(SendForceFeedbackCommand)(THIS_ DWORD);
    STDMETHOD(EnumCreatedEffectObjects)(THIS_ LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,LPVOID,DWORD);
    STDMETHOD(Escape)(THIS_ LPDIEFFESCAPE);
    STDMETHOD(Poll)(THIS);
    STDMETHOD(SendDeviceData)(THIS_ DWORD,LPCDIDEVICEOBJECTDATA,LPDWORD,DWORD);
    STDMETHOD(EnumEffectsInFile)(THIS_ LPCSTR,LPDIENUMEFFECTSINFILECALLBACK,LPVOID,DWORD);
    STDMETHOD(WriteEffectToFile)(THIS_ LPCSTR,DWORD,LPDIFILEEFFECT,DWORD);
    STDMETHOD(BuildActionMap)(THIS_ LPDIACTIONFORMATA,LPCSTR,DWORD);
    STDMETHOD(SetActionMap)(THIS_ LPDIACTIONFORMATA,LPCSTR,DWORD);
    STDMETHOD(GetImageInfo)(THIS_ LPDIDEVICEIMAGEINFOHEADERA);

private:
	IDirectInputDevice8A* m_pDevice;
	IDirectInput8A* m_pInput;
	DWORD m_dwType;

};
